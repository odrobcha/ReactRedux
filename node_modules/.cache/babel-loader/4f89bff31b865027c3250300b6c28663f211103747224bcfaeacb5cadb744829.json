{"ast":null,"code":"const redux = require('redux');\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounterField: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggle(state) {\n      state.showCounterField = !state.showCounterField;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) =>{\n//     if (action.type === 'increment'){\n//         return {\n//             counter : state.counter + 1,\n//             showCounterField : state.showCounterField\n//         }\n//     }\n//\n//     if (action.type === 'increase'){\n//         return {\n//             counter : state.counter + action.amount,\n//             showCounterField : state.showCounterField\n//         }\n//     }\n//\n//     if (action.type === 'decrement'){\n//         return {\n//             counter :  state.counter - 1,\n//             showCounterField : state.showCounterField\n//         }\n//\n//     }\n//\n//\n//     if(action.type === 'toggle'){\n//         return {\n//             counter :  state.counter,\n//             showCounterField : !state.showCounterField\n//         }\n//     }\n//     return state\n// }\n\nconst store = redux.createStore(counterSlice.reducer);\n// console.log(\"TEst store\")\n// console.log(store.getState())\n\nexport default store;","map":{"version":3,"names":["redux","require","createSlice","initialState","counter","showCounterField","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggle","store","createStore","reducer"],"sources":["/var/www/React/ReactWithRedux/src/store/index.js"],"sourcesContent":["const redux = require('redux');\n\nimport {createSlice} from '@reduxjs/toolkit';\n\nconst initialState = {\n    counter : 0,\n    showCounterField: true\n}\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState : initialState,\n    reducers : {\n        increment(state){\n             state.counter++;\n        },\n        decrement(state){\n            state.counter--;\n        },\n        increase(state, action){\n            state.counter = state.counter + action.amount\n        },\n        toggle(state){\n            state.showCounterField = !state.showCounterField\n        }\n    }\n})\n\n\n// const counterReducer = (state = initialState, action) =>{\n//     if (action.type === 'increment'){\n//         return {\n//             counter : state.counter + 1,\n//             showCounterField : state.showCounterField\n//         }\n//     }\n//\n//     if (action.type === 'increase'){\n//         return {\n//             counter : state.counter + action.amount,\n//             showCounterField : state.showCounterField\n//         }\n//     }\n//\n//     if (action.type === 'decrement'){\n//         return {\n//             counter :  state.counter - 1,\n//             showCounterField : state.showCounterField\n//         }\n//\n//     }\n//\n//\n//     if(action.type === 'toggle'){\n//         return {\n//             counter :  state.counter,\n//             showCounterField : !state.showCounterField\n//         }\n//     }\n//     return state\n// }\n\n\n\nconst store = redux.createStore(counterSlice.reducer);\n// console.log(\"TEst store\")\n// console.log(store.getState())\n\nexport default store;\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAE9B,SAAQC,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAG,CAAC;EACXC,gBAAgB,EAAE;AACtB,CAAC;AACD,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,SAAS;EACfJ,YAAY,EAAGA,YAAY;EAC3BK,QAAQ,EAAG;IACPC,SAASA,CAACC,KAAK,EAAC;MACXA,KAAK,CAACN,OAAO,EAAE;IACpB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAC;MACnBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,MAAM;IACjD,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAC;MACTA,KAAK,CAACL,gBAAgB,GAAG,CAACK,KAAK,CAACL,gBAAgB;IACpD;EACJ;AACJ,CAAC,CAAC;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,MAAMW,KAAK,GAAGhB,KAAK,CAACiB,WAAW,CAACX,YAAY,CAACY,OAAO,CAAC;AACrD;AACA;;AAEA,eAAeF,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}