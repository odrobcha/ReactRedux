{"ast":null,"code":"var _jsxFileName = \"/var/www/React/ReactWithRedux/src/components/CounterClassBased.js\";\nimport { Component } from 'react';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport classes from './Counter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CounterClassBased extends Component {\n  increment() {\n    this.props.increment();\n  }\n  decrement() {\n    this.props.decrement();\n  }\n  toggleCounterHandler() {}\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.counter,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Redux Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.value,\n        children: this.props.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.incrementHandler.bind(this),\n          children: \"Increment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.decrementHandler.bind(this),\n          children: \"Decrement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleCounterHandler,\n        children: \"Toggle Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    counter: state.counter\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch({\n      type: \"increment\"\n    }),\n    decrement: () => dispatch({\n      type: \"decrement\"\n    })\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CounterClassBased); //connect requires 2 function 1. to set state to props and dispatch action to props","map":{"version":3,"names":["Component","useSelector","useDispatch","connect","classes","jsxDEV","_jsxDEV","CounterClassBased","increment","props","decrement","toggleCounterHandler","render","className","counter","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","incrementHandler","bind","decrementHandler","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"sources":["/var/www/React/ReactWithRedux/src/components/CounterClassBased.js"],"sourcesContent":["import { Component } from 'react';\nimport { useSelector, useDispatch, connect } from 'react-redux';\n\nimport classes from './Counter.module.css';\n\n\n\nclass CounterClassBased extends Component {\n    increment (){\n        this.props.increment();\n    }\n    decrement (){\n        this.props.decrement();\n    }\n    toggleCounterHandler(){\n\n    }\n\n    render () {\n        return (\n          <main className={classes.counter}>\n              <h1>Redux Counter</h1>\n              <div className={classes.value}>{this.props.counter}</div>\n\n              <div>\n                  <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n                  <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n              </div>\n              <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n          </main>\n        )\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        counter : state.counter,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        increment : () => dispatch ({type : \"increment\"}),\n        decrement : () => dispatch ({type : \"decrement\"}),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CounterClassBased);  //connect requires 2 function 1. to set state to props and dispatch action to props\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,EAAEC,OAAO,QAAQ,aAAa;AAE/D,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI3C,MAAMC,iBAAiB,SAASP,SAAS,CAAC;EACtCQ,SAASA,CAAA,EAAG;IACR,IAAI,CAACC,KAAK,CAACD,SAAS,CAAC,CAAC;EAC1B;EACAE,SAASA,CAAA,EAAG;IACR,IAAI,CAACD,KAAK,CAACC,SAAS,CAAC,CAAC;EAC1B;EACAC,oBAAoBA,CAAA,EAAE,CAEtB;EAEAC,MAAMA,CAAA,EAAI;IACN,oBACEN,OAAA;MAAMO,SAAS,EAAET,OAAO,CAACU,OAAQ;MAAAC,QAAA,gBAC7BT,OAAA;QAAAS,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBb,OAAA;QAAKO,SAAS,EAAET,OAAO,CAACgB,KAAM;QAAAL,QAAA,EAAE,IAAI,CAACN,KAAK,CAACK;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAEzDb,OAAA;QAAAS,QAAA,gBACIT,OAAA;UAAQe,OAAO,EAAE,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAAE;UAAAR,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrEb,OAAA;UAAQe,OAAO,EAAE,IAAI,CAACG,gBAAgB,CAACD,IAAI,CAAC,IAAI,CAAE;UAAAR,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE,CAAC,eACNb,OAAA;QAAQe,OAAO,EAAE,IAAI,CAACV,oBAAqB;QAAAI,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC;EAGb;AACJ;AAEA,MAAMM,eAAe,GAAGC,KAAK,IAAI;EAC7B,OAAO;IACHZ,OAAO,EAAGY,KAAK,CAACZ;EACpB,CAAC;AACL,CAAC;AAED,MAAMa,kBAAkB,GAAGC,QAAQ,IAAI;EACnC,OAAO;IACHpB,SAAS,EAAGA,CAAA,KAAMoB,QAAQ,CAAE;MAACC,IAAI,EAAG;IAAW,CAAC,CAAC;IACjDnB,SAAS,EAAGA,CAAA,KAAMkB,QAAQ,CAAE;MAACC,IAAI,EAAG;IAAW,CAAC;EACpD,CAAC;AACL,CAAC;AACD,eAAe1B,OAAO,CAACsB,eAAe,EAAEE,kBAAkB,CAAC,CAACpB,iBAAiB,CAAC,CAAC,CAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}