{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\n//const redux = require('redux');\n\nconst initialCounterState = {\n  counter: 0,\n  showCounterField: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggle(state) {\n      state.showCounterField = !state.showCounterField;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) =>{\n//     if (action.type === 'increment'){\n//         return {\n//             counter : state.counter + 1,\n//             showCounterField : state.showCounterField\n//         }\n//     }\n//\n//     if (action.type === 'increase'){\n//         return {\n//             counter : state.counter + action.amount,\n//             showCounterField : state.showCounterField\n//         }\n//     }\n//\n//     if (action.type === 'decrement'){\n//         return {\n//             counter :  state.counter - 1,\n//             showCounterField : state.showCounterField\n//         }\n//\n//     }\n//\n//\n//     if(action.type === 'toggle'){\n//         return {\n//             counter :  state.counter,\n//             showCounterField : !state.showCounterField\n//         }\n//     }\n//     return state\n// }\n\n//const store = redux.createStore(counterReducer);\n\n// console.log(\"TEst store\")\n// console.log(store.getState())\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounterField","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggle","store","reducer","counterActions","actions"],"sources":["/var/www/React/ReactWithRedux/src/store/index.js"],"sourcesContent":["import {createSlice, configureStore} from '@reduxjs/toolkit';\n//const redux = require('redux');\n\nconst initialCounterState = {\n    counter : 0,\n    showCounterField: true\n};\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState : initialCounterState,\n    reducers : {\n        increment(state){\n             state.counter++;\n        },\n        decrement(state){\n            state.counter--;\n        },\n        increase(state, action){\n            state.counter = state.counter + action.payload\n        },\n        toggle(state){\n            state.showCounterField = !state.showCounterField\n        }\n    }\n})\n\n\n// const counterReducer = (state = initialState, action) =>{\n//     if (action.type === 'increment'){\n//         return {\n//             counter : state.counter + 1,\n//             showCounterField : state.showCounterField\n//         }\n//     }\n//\n//     if (action.type === 'increase'){\n//         return {\n//             counter : state.counter + action.amount,\n//             showCounterField : state.showCounterField\n//         }\n//     }\n//\n//     if (action.type === 'decrement'){\n//         return {\n//             counter :  state.counter - 1,\n//             showCounterField : state.showCounterField\n//         }\n//\n//     }\n//\n//\n//     if(action.type === 'toggle'){\n//         return {\n//             counter :  state.counter,\n//             showCounterField : !state.showCounterField\n//         }\n//     }\n//     return state\n// }\n\n\n\n//const store = redux.createStore(counterReducer);\n\n// console.log(\"TEst store\")\n// console.log(store.getState())\n\n\nconst store = configureStore({\n    reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\n\nexport default store;\n"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAC5D;;AAEA,MAAMC,mBAAmB,GAAG;EACxBC,OAAO,EAAG,CAAC;EACXC,gBAAgB,EAAE;AACtB,CAAC;AACD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,SAAS;EACfC,YAAY,EAAGL,mBAAmB;EAClCM,QAAQ,EAAG;IACPC,SAASA,CAACC,KAAK,EAAC;MACXA,KAAK,CAACP,OAAO,EAAE;IACpB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAC;MACnBH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAC;MACTA,KAAK,CAACN,gBAAgB,GAAG,CAACM,KAAK,CAACN,gBAAgB;IACpD;EACJ;AACJ,CAAC,CAAC;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;;AAGA,MAAMY,KAAK,GAAGf,cAAc,CAAC;EACzBgB,OAAO,EAAEZ,YAAY,CAACY;AAC1B,CAAC,CAAC;AACF,OAAO,MAAMC,cAAc,GAAGb,YAAY,CAACc,OAAO;AAElD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}