{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounterField: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggle(state) {\n      state.showCounterField = !state.showCounterField;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\n// const store = configureStore({            // for one stateSlice and one reducer\n//     reducer: counterSlice.reducer\n// });\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounterField","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggle","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","auth","counterActions","actions"],"sources":["/var/www/React/ReactWithRedux/src/store/index.js"],"sourcesContent":["import {createSlice, configureStore} from '@reduxjs/toolkit';\nconst initialCounterState = {\n    counter : 0,\n    showCounterField: true\n};\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState : initialCounterState,\n    reducers : {\n        increment(state){\n             state.counter++;\n        },\n        decrement(state){\n            state.counter--;\n        },\n        increase(state, action){\n            state.counter = state.counter + action.payload\n        },\n        toggle(state){\n            state.showCounterField = !state.showCounterField\n        }\n    }\n});\n\n\n\nconst initialAuthState = {\n    isAuthenticated : false,\n}\n\nconst authSlice = createSlice( {\n    name : 'authentication',\n    initialState : initialAuthState,\n    reducers : {\n        login(state){\n            state.isAuthenticated = true;\n        },\n        logout(state){\n            state.isAuthenticated = false;\n        }\n    }\n\n});\n// const store = configureStore({            // for one stateSlice and one reducer\n//     reducer: counterSlice.reducer\n// });\n\nconst store = configureStore({\n    reducer: {counter : counterSlice.reducer, auth: authSlice.reducer}\n});\nexport const counterActions = counterSlice.actions;\n\nexport default store;\n"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAC5D,MAAMC,mBAAmB,GAAG;EACxBC,OAAO,EAAG,CAAC;EACXC,gBAAgB,EAAE;AACtB,CAAC;AACD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,SAAS;EACfC,YAAY,EAAGL,mBAAmB;EAClCM,QAAQ,EAAG;IACPC,SAASA,CAACC,KAAK,EAAC;MACXA,KAAK,CAACP,OAAO,EAAE;IACpB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAC;MACnBH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAC;MACTA,KAAK,CAACN,gBAAgB,GAAG,CAACM,KAAK,CAACN,gBAAgB;IACpD;EACJ;AACJ,CAAC,CAAC;AAIF,MAAMY,gBAAgB,GAAG;EACrBC,eAAe,EAAG;AACtB,CAAC;AAED,MAAMC,SAAS,GAAGlB,WAAW,CAAE;EAC3BM,IAAI,EAAG,gBAAgB;EACvBC,YAAY,EAAGS,gBAAgB;EAC/BR,QAAQ,EAAG;IACPW,KAAKA,CAACT,KAAK,EAAC;MACRA,KAAK,CAACO,eAAe,GAAG,IAAI;IAChC,CAAC;IACDG,MAAMA,CAACV,KAAK,EAAC;MACTA,KAAK,CAACO,eAAe,GAAG,KAAK;IACjC;EACJ;AAEJ,CAAC,CAAC;AACF;AACA;AACA;;AAEA,MAAMI,KAAK,GAAGpB,cAAc,CAAC;EACzBqB,OAAO,EAAE;IAACnB,OAAO,EAAGE,YAAY,CAACiB,OAAO;IAAEC,IAAI,EAAEL,SAAS,CAACI;EAAO;AACrE,CAAC,CAAC;AACF,OAAO,MAAME,cAAc,GAAGnB,YAAY,CAACoB,OAAO;AAElD,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}